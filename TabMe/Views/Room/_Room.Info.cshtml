@model TabMe.ViewModel.RoomModel
@using TabMe.ViewModel.Enum;

@Html.HiddenFor(model => model.Room.Id)
<div class="form-group row">
    @Html.LabelFor(model => model.Room.RoomTypeId, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        @Html.DropDownList("Room.RoomType", EnumHelper.GetSelectList(typeof(RoomType)), "Select Room Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Room.RoomTypeId, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.Room.Code, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        @Html.EditorFor(model => model.Room.Code, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Room.Code, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(model => model.Room.Name, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        @Html.EditorFor(model => model.Room.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Room.Name, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.Room.Capacity, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        @Html.EditorFor(model => model.Room.Capacity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Room.Capacity, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(model => model.Room.Rate, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        <div class="input-group">
            <span class="input-group-addon">$</span>
            @Html.EditorFor(model => model.Room.Rate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Room.Rate, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.LabelFor(model => model.Room.PackageId, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        @Html.DropDownList("Room.Package", EnumHelper.GetSelectList(typeof(Package)), "Select package", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Room.PackageId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-2 col-form-label">Peak Timing</label>
    <div class="col-sm-10 add-area">
        <div class="row">
            <div class="col-sm-12">
                <div class="checkbox checkbox-primary">
                    @Html.EditorFor(model => model.Room.IsPeak)
                    <label for="@Model.Room.IsPeak"></label>
                    @Html.ValidationMessageFor(model => model.Room.IsPeak, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="checkbox checkbox-primary">

            </div>
        </div>
        <div class="row add_peak_time" style="display: none;">
            <div class="col-sm-4">
                <div class="input-group date" id="datetimepicker3">
                    <input type="text" class="form-control" placeholder="Open Time" id="Room_PeakOpenTime" name="Room.PeakOpenTime" value="@Model.Room.PeakOpenTime">
                    <span class="input-group-addon">
                        <span class="fa fa-clock-o"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="input-group date" id="datetimepicker4">
                    <input type="text" class="form-control" placeholder="Close Time" id="Room_PeakCloseTime" name="Room.PeakCloseTime" value="@Model.Room.PeakCloseTime">
                    <span class="input-group-addon">
                        <span class="fa fa-clock-o"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="input-group">
                    <span class="input-group-addon">$</span>
                    <input type="number" class="form-control" placeholder="Rate" id="Room_PeakRate" name="Room.PeakRate" value="@Model.Room.PeakRate">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-group row">
    <label class="col-sm-2 col-form-label">Custom Rate Timing</label>
    <div class="col-sm-10 add-area">
        <div class="row">
            <div class="col-sm-12">
                <div class="checkbox checkbox-primary">
                    @*<input type="checkbox" id="custom_time">
                    <label for="custom_time"></label>*@
                    @Html.EditorFor(model => model.Room.IsCustomRateTiming)
                    <label for="@Model.Room.IsCustomRateTiming"></label>
                    @Html.ValidationMessageFor(model => model.Room.IsCustomRateTiming, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row add_custom_time" style="display: none;">
            <div class="col-sm-4">
                <div class="input-group date" id="datetimepicker5">
                    <input type="text" class="form-control" placeholder="Open Time" id="Room_CRTOpenTime" name="Room.CRTOpenTime" value="@Model.Room.CRTOpenTime">
                    <span class="input-group-addon">
                        <span class="fa fa-clock-o"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="input-group date" id="datetimepicker6">
                    <input type="text" class="form-control" placeholder="Close Time" id="Room_CRTCloseTime" name="Room.CRTCloseTime" value="@Model.Room.CRTCloseTime">
                    <span class="input-group-addon">
                        <span class="fa fa-clock-o"></span>
                    </span>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="input-group">
                    <span class="input-group-addon">$</span>
                    <input type="number" class="form-control" placeholder="Rate" id="Room_CRTRate" name="Room.CRTRate" value="@Model.Room.CRTRate">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-group row">
    @Html.LabelFor(model => model.Room.Description, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Room.Description, new { @class = "textarea wysihtml", @placeholder = "Enter text ...", @style = "width:100%;height: 200px" })
        @Html.ValidationMessageFor(model => model.Room.Description, "", new { @class = "text-danger" })
    </div>
</div>
<div id="fine-uploader-gallery"></div>
<div class="form-group row">
    @Html.LabelFor(model => model.Room.Remarks, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Room.Remarks, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Room.Remarks, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(model => model.Room.IsMinSpend, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        <div class="row">
            <div class="col-sm-12">
                <div class="checkbox checkbox-primary">
                    @Html.EditorFor(model => model.Room.IsMinSpend)
                    <label for="@Model.Room.IsMinSpend"></label>
                    @Html.ValidationMessageFor(model => model.Room.IsMinSpend, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row IsMinSpend_area" style="display:none;">
            <div class="col-sm-12">
                <div class="input-group">
                    <span class="input-group-addon">$</span>
                    <input type="number" class="form-control" placeholder="Rate" id="Room_MinSpendRate" name="Room.MinSpendRate" value="@Model.Room.MinSpendRate">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(model => model.Room.Status, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
    <div class="col-sm-4">
        <div class="checkbox checkbox-primary">
            @Html.EditorFor(model => model.Room.Status)
            <label for="@Model.Room.Status"></label>
            @Html.ValidationMessageFor(model => model.Room.Status, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

@Html.HiddenFor(model => model.Room.PictureIds)
<script type="text/template" id="qq-template-gallery">
    <div class="qq-uploader-selector qq-uploader qq-gallery" qq-drop-area-text="Drop files here">
        <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
            <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
        </div>
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
            <span class="qq-upload-drop-area-text-selector"></span>
        </div>
        <div class="qq-upload-button-selector qq-upload-button">
            <div>Upload a file</div>
        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
            <span>Processing dropped files...</span>
            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
        </span>
        <ul class="qq-upload-list-selector qq-upload-list" role="region" aria-live="polite" aria-relevant="additions removals">
            <li>
                <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>
                <div class="qq-progress-bar-container-selector qq-progress-bar-container">
                    <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                <div class="qq-thumbnail-wrapper">
                    <img class="qq-thumbnail-selector" qq-max-size="120" qq-server-scale>
                </div>
                <button type="button" class="qq-upload-cancel-selector qq-upload-cancel">X</button>
                <button type="button" class="qq-upload-retry-selector qq-upload-retry">
                    <span class="qq-btn qq-retry-icon" aria-label="Retry"></span>
                    Retry
                </button>

                <div class="qq-file-info">
                    <div class="qq-file-name">
                        <span class="qq-upload-file-selector qq-upload-file"></span>
                        <span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>
                    </div>
                    <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                    <span class="qq-upload-size-selector qq-upload-size"></span>
                    <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">
                        <span class="qq-btn qq-delete-icon" aria-label="Delete"></span>
                    </button>
                    <button type="button" class="qq-btn qq-upload-pause-selector qq-upload-pause">
                        <span class="qq-btn qq-pause-icon" aria-label="Pause"></span>
                    </button>
                    <button type="button" class="qq-btn qq-upload-continue-selector qq-upload-continue">
                        <span class="qq-btn qq-continue-icon" aria-label="Continue"></span>
                    </button>
                </div>
            </li>
        </ul>

        <dialog class="qq-alert-dialog-selector">
            <div class="qq-dialog-message-selector"></div>
            <div class="qq-dialog-buttons">
                <button type="button" class="qq-cancel-button-selector">Close</button>
            </div>
        </dialog>

        <dialog class="qq-confirm-dialog-selector">
            <div class="qq-dialog-message-selector"></div>
            <div class="qq-dialog-buttons">
                <button type="button" class="qq-cancel-button-selector">No</button>
                <button type="button" class="qq-ok-button-selector">Yes</button>
            </div>
        </dialog>

        <dialog class="qq-prompt-dialog-selector">
            <div class="qq-dialog-message-selector"></div>
            <input type="text">
            <div class="qq-dialog-buttons">
                <button type="button" class="qq-cancel-button-selector">Cancel</button>
                <button type="button" class="qq-ok-button-selector">Ok</button>
            </div>
        </dialog>
    </div>
</script>   